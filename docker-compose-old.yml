
services:
  db:
    container_name: ${GEMINI_DB_HOSTNAME}
    hostname: ${GEMINI_DB_HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: ./gemini/server/database/Dockerfile
    image: ${GEMINI_DOCKER_USER}/db:latest
    ports:
      - "${GEMINI_DB_PORT}:5432"
    environment:
      - "POSTGRES_USER=${GEMINI_DB_USER}"
      - "POSTGRES_PASSWORD=${GEMINI_DB_PASSWORD}"
      - "POSTGRES_DB=${GEMINI_DB_NAME}"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./gemini/db/init_sql:/docker-entrypoint-initdb.d
      - ./
    networks:
      - gemini_network
    depends_on:
      - logger

  file-store:
    container_name: ${GEMINI_FILE_STORE_HOSTNAME}
    hostname: ${GEMINI_FILE_STORE_HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: ./gemini/server/file_server/Dockerfile
    image: ${GEMINI_DOCKER_USER}/file-store:latest
    ports:
      - "${GEMINI_FILE_STORE_PORT}:9000"
      - "${GEMINI_FILE_STORE_API_PORT}:9001"
    environment:
      - "MINIO_ROOT_USER=${GEMINI_FILE_STORE_ROOT_USER}"
      - "MINIO_ROOT_PASSWORD=${GEMINI_FILE_STORE_ROOT_PASSWORD}"
      - "MINIO_STORE_ACCESS_KEY=${GEMINI_FILE_STORE_ACCESS_KEY}"
      - "MINIO_STORE_SECRET_KEY=${GEMINI_FILE_STORE_SECRET_KEY}"
      - "MINIO_DEFAULT_BUCKETS=${GEMINI_FILE_STORE_BUCKET_NAME}"
      - "MC_HOST_local=http://${MINIO_ROOT_USER}:${MINIO_ROOT_PASSWORD}@localhost:9000"
    networks:
      - gemini_network
    depends_on:
      - db

  logger:
    container_name: ${GEMINI_LOGGER_HOSTNAME}
    hostname: ${GEMINI_LOGGER_HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: ./gemini/server/logger/Dockerfile
    image: ${GEMINI_DOCKER_USER}/logger:latest
    ports:
      - "${GEMINI_LOGGER_PORT}:6379"
    environment:
      - "REDIS_PASSWORD=${GEMINI_LOGGER_PASSWORD}"
      - "REDIS_PORT=${GEMINI_LOGGER_PORT}"
    networks:
      - gemini_network

  rest-api:
    container_name: ${GEMINI_API_HOSTNAME}
    hostname: ${GEMINI_API_HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: ./gemini/server/rest_api/Dockerfile
    image: ${GEMINI_DOCKER_USER}/rest-api:latest
    ports:
      - "${GEMINI_API_PORT}:7777"
    environment:
      - "GEMINI_API_PORT=${GEMINI_API_PORT}"
      - "GEMINI_API_USER=${GEMINI_API_USER}"
      - "GEMINI_API_PASSWORD=${GEMINI_API_PASSWORD}"
    networks:
      - "gemini_network"
    depends_on:
      - logger
      - db
      - file-store

  scheduler-db:
    container_name: ${GEMINI_SCHEDULER_DB_HOSTNAME}
    hostname: ${GEMINI_SCHEDULER_DB_HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: ./gemini/server/scheduler/db.Dockerfile
    image: ${GEMINI_DOCKER_USER}/scheduler-db:latest
    ports:
      - "${GEMINI_SCHEDULER_DB_PORT}:5432"
    environment:
      - "POSTGRES_USER=${GEMINI_SCHEDULER_DB_USER}"
      - "POSTGRES_PASSWORD=${GEMINI_SCHEDULER_DB_PASSWORD}"
      - "POSTGRES_DB=${GEMINI_SCHEDULER_DB_NAME}"
    networks:
      - gemini_network
    depends_on:
      - rest-api

  scheduler-server:
    container_name: ${GEMINI_SCHEDULER_SERVER_HOSTNAME}
    hostname: ${GEMINI_SCHEDULER_SERVER_HOSTNAME}
    restart: always
    build:
      context: .
      dockerfile: ./gemini/server/scheduler/Dockerfile
    image: ${GEMINI_DOCKER_USER}/scheduler:latest
    ports:
      - "${GEMINI_SCHEDULER_SERVER_PORT}:4200"
    environment:
      - "PREFECT_API_DATABASE_HOST=${GEMINI_SCHEDULER_DB_HOSTNAME}"
      - "PREFECT_API_DATABASE_PORT=${GEMINI_SCHEDULER_DB_PORT}"
      - "PREFECT_API_DATABASE_USER=${GEMINI_SCHEDULER_DB_USER}"
      - "PREFECT_API_DATABASE_PASSWORD=${GEMINI_SCHEDULER_DB_PASSWORD}"
      - "PREFECT_API_DATABASE_NAME=${GEMINI_SCHEDULER_DB_NAME}"
    networks:
      - gemini_network
    depends_on:
      - scheduler-db

networks:
  gemini_network:
    driver: bridge
