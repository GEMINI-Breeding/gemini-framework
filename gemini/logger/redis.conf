# Redis configuration file for logging use case
# Bind to all network interfaces
bind 0.0.0.0
# Explanation: Binding to all network interfaces allows Redis to accept connections from any IP address.
# In a production environment, you might want to restrict this to specific IP addresses for security reasons.

# Enable protected mode
protected-mode yes
# Explanation: Protected mode is a security feature that prevents Redis from accepting connections from untrusted sources.

# Policy for key eviction when maxmemory is reached
maxmemory-policy volatile-ttl
# Explanation: For logging, we prefer volatile-ttl which removes expired keys first, then oldest entries.

# Disable RDB persistence for logging use case
save ""
# Explanation: For a logging system, we disable RDB persistence to improve write performance
# and prevent issues with RDB format compatibility

# Disable AOF for better write performance
appendonly no
# Explanation: For logging purposes, we prioritize write performance over persistence

# Set the number of databases
databases 2
# Explanation: For logging, we typically need fewer databases, reducing memory overhead

# Set the timeout for client connections
timeout 300
# Explanation: Setting a timeout for client connections helps free up resources by closing idle connections

# Set the maximum number of connected clients
maxclients 1000
# Explanation: For logging, we typically need fewer concurrent connections

# Enable TCP keepalive
tcp-keepalive 60
# Explanation: More aggressive TCP keepalive for logging to detect dead connections faster

# Set the database directory
dir /data
# Explanation: The directory where Redis will store its data files if persistence is enabled later

# Performance optimizations for logging
# Disable slow log as it's less relevant for logging
slowlog-log-slower-than -1
# Explanation: Disabling slow log reduces overhead for logging operations

# Disable latency monitoring for better performance
latency-monitor-threshold 0
# Explanation: Latency monitoring is less crucial for logging use case

# Client output buffer limits adjusted for logging
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
# Explanation: Adjusted buffer limits to handle logging traffic patterns

# Security: Disable potentially dangerous commands
rename-command FLUSHALL ""
rename-command FLUSHDB ""
rename-command CONFIG ""
# Explanation: Disable commands that could accidentally clear log data