name: gemini

services:
  db:
    container_name: ${GEMINI_DB_HOSTNAME}
    hostname: ${GEMINI_DB_HOSTNAME}
    restart: always
    build:
      context: ./gemini/db
      dockerfile: Dockerfile
    image: gemini-db:latest
    ports:
      - "${GEMINI_DB_PORT}:5432"
    environment:
      - "POSTGRESQL_USERNAME=${GEMINI_DB_USER}"
      - "POSTGRESQL_PASSWORD=${GEMINI_DB_PASSWORD}"
      - "POSTGRESQL_INITSCRIPTS_USERNAME=${GEMINI_DB_USER}"
      - "POSTGRESQL_INITSCRIPTS_PASSWORD=${GEMINI_DB_PASSWORD}"
      - "POSTGRESQL_POSTGRES_PASSWORD=${GEMINI_DB_PASSWORD}"
      - "POSTGRESQL_DATABASE=${GEMINI_DB_NAME}"
      - "POSTGRESQL_REPLICATION_USER=${GEMINI_DB_USER}"
      - "POSTGRESQL_REPLICATION_PASSWORD=${GEMINI_DB_PASSWORD}"
      - "POSTGRESQL_REPLICATION_USE_PASSFILE=false"
    volumes:
      - gemini_db_data:/bitnami/postgresql
    networks:
      - gemini_network

  storage:
    container_name: ${GEMINI_STORAGE_HOSTNAME}
    hostname: ${GEMINI_STORAGE_HOSTNAME}
    restart: always
    build:
      context: ./gemini/storage
      dockerfile: Dockerfile
    image: gemini-storage:latest
    ports:
      - "${GEMINI_STORAGE_PORT}:9000"
      - "${GEMINI_STORAGE_API_PORT}:9001"
    environment:
      - "MINIO_ROOT_USER=${GEMINI_STORAGE_ROOT_USER}"
      - "MINIO_ROOT_PASSWORD=${GEMINI_STORAGE_ROOT_PASSWORD}"
      - "MINIO_SCHEME=http"
      - "BITNAMI_DEBUG=true"
      # - "MC_HOST_loca=http://${GEMINI_STORAGE_ROOT_USER}:${GEMINI_STORAGE_ROOT_PASSWORD}@localhost:9000"
    volumes:
      - gemini_storage_data:/bitnami/minio/data
      - ./gemini/storage/scripts/healthcheck.sh:/usr/local/bin/healthcheck.sh
    networks:
      - gemini_network
    depends_on:
      - db

  storage-init:
    image: bitnami/minio-client:2024
    networks:
      - gemini_network
    depends_on:
      - storage
    environment:
      - "MINIO_ACCESS_KEY=${GEMINI_STORAGE_ROOT_USER}"
      - "MINIO_SECRET_KEY=${GEMINI_STORAGE_ROOT_PASSWORD}"
      - "MINIO_SERVER_HOST=${GEMINI_STORAGE_HOSTNAME}"
      - "GEMINI_STORAGE_ACCESS_KEY=${GEMINI_STORAGE_ACCESS_KEY}"
      - "GEMINI_STORAGE_SECRET_KEY=${GEMINI_STORAGE_SECRET_KEY}"
      - "GEMINI_STORAGE_BUCKET_NAME=${GEMINI_STORAGE_BUCKET_NAME}"
    volumes:
      - ./gemini/storage/scripts/init_minio.sh:/usr/local/bin/init_minio.sh
    entrypoint: >
      /bin/sh -c "sleep 10 && /usr/local/bin/init_minio.sh"

  logger:
    container_name: ${GEMINI_LOGGER_HOSTNAME}
    hostname: ${GEMINI_LOGGER_HOSTNAME}
    restart: always
    build:
      context: ./gemini/logger
      dockerfile: Dockerfile
    image: gemini-logger:latest
    ports:
      - "${GEMINI_LOGGER_PORT}:6379"
    environment:
      - "REDIS_PASSWORD=${GEMINI_LOGGER_PASSWORD}"
      - "REDIS_PORT=${GEMINI_LOGGER_PORT}"
      - "REDIS_MAX_MEMORY=${GEMINI_LOGGER_MAX_MEMORY:-256mb}"
    volumes:
      - gemini_logger_data:/data
      - ./gemini/logger/redis.conf:/usr/local/etc/redis/redis.conf
    command: >
      redis-server /usr/local/etc/redis/redis.conf
      --requirepass "${GEMINI_LOGGER_PASSWORD}"
      --port ${GEMINI_LOGGER_PORT}
      --maxmemory ${GEMINI_LOGGER_MAX_MEMORY:-256mb}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - gemini_network
  

    





  # db:
  #   container_name: ${GEMINI_DB_HOSTNAME}
  #   hostname: ${GEMINI_DB_HOSTNAME}
  #   restart: always
  #   image: ghcr.io/hydradatabase/hydra:15
  #   ports:
  #     - "${GEMINI_DB_PORT}:5432"
  #   environment:
  #     - "POSTGRES_USER=${GEMINI_DB_USER}"
  #     - "POSTGRES_PASSWORD=${GEMINI_DB_PASSWORD}"
  #     - "POSTGRES_DB=${GEMINI_DB_NAME}"
  #   volumes:
  #     - gemini_db_data:/var/lib/postgresql/data
  #     - ./gemini/db/init_sql:/docker-entrypoint-initdb.d
  #     - ./gemini/db/postgresql.conf:/etc/postgresql/postgresql.conf
  #   networks:
  #     - gemini_network

  # logger:
  #   container_name: ${GEMINI_LOGGER_HOSTNAME}
  #   hostname: ${GEMINI_LOGGER_HOSTNAME}
  #   restart: always
  #   image: redis:7.2-alpine
  #   ports:
  #     - "${GEMINI_LOGGER_PORT}:6379"
  #   environment:
  #     - "REDIS_PASSWORD=${GEMINI_LOGGER_PASSWORD}"
  #     - "REDIS_PORT=${GEMINI_LOGGER_PORT}"
  #     - "REDIS_MAX_MEMORY=${GEMINI_LOGGER_MAX_MEMORY:-256mb}"
  #   volumes:
  #     - gemini_logger_data:/data
  #     - ./gemini/logger/redis.conf:/usr/local/etc/redis/redis.conf
  #   command: >
  #     redis-server /usr/local/etc/redis/redis.conf
  #     --requirepass "${GEMINI_LOGGER_PASSWORD}"
  #     --port ${GEMINI_LOGGER_PORT}
  #     --maxmemory ${GEMINI_LOGGER_MAX_MEMORY:-256mb}
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "--raw", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   networks:
  #     - gemini_network

  # storage:
  #   container_name: ${GEMINI_STORAGE_HOSTNAME}
  #   hostname: ${GEMINI_STORAGE_HOSTNAME}
  #   restart: always
  #   image: minio/minio:RELEASE.2024-07-29T22-14-52Z
  #   ports:
  #     - "${GEMINI_STORAGE_PORT}:9000"
  #     - "${GEMINI_STORAGE_API_PORT}:9001"
  #   environment:
  #     - "MINIO_ROOT_USER=${GEMINI_STORAGE_ROOT_USER}"
  #     - "MINIO_ROOT_PASSWORD=${GEMINI_STORAGE_ROOT_PASSWORD}"
  #     - "GEMINI_STORAGE_ACCESS_KEY=${GEMINI_STORAGE_ACCESS_KEY}"
  #     - "GEMINI_STORAGE_SECRET_KEY=${GEMINI_STORAGE_SECRET_KEY}"
  #     - "GEMINI_STORAGE_BUCKET_NAME=${GEMINI_STORAGE_BUCKET_NAME}"
  #     - "MC_HOST_local=http://${GEMINI_STORAGE_ROOT_USER}:${GEMINI_STORAGE_ROOT_PASSWORD}@localhost:9000"
  #   volumes:
  #     - gemini_storage_data:/data
  #     - ./gemini/storage/scripts:/usr/local/bin/
  #   command: >
  #     server /data
  #   healthcheck:
  #     test: ["CMD", "/usr/local/bin/healthcheck.sh"]
  #     interval: 30s
  #     timeout: 5s
  #     start_period: 30s
  #     retries: 3         
  #   networks:
  #     - gemini_network
  #   depends_on:
  #     - db

  # storage-init:
  #   image: minio/mc:RELEASE.2024-07-31T15-58-33Z
  #   depends_on:
  #     - storage
  #   environment:
  #     - "MINIO_ACCESS_KEY=${GEMINI_STORAGE_ROOT_USER}"
  #     - "MINIO_SECRET_KEY=${GEMINI_STORAGE_ROOT_PASSWORD}"
  #     - "GEMINI_STORAGE_HOSTNAME=${GEMINI_STORAGE_HOSTNAME}"
  #   volumes:
  #     - ./gemini/storage/scripts:/usr/local/bin/
  #   entrypoint: >
  #     /bin/sh -c "sleep 10 && /usr/local/bin/init_minio.sh"
  #   networks:
  #     - gemini_network


  # storage:
  #   container_name: ${GEMINI_STORAGE_HOSTNAME}
  #   hostname: ${GEMINI_STORAGE_HOSTNAME}
  #   user: 1001:1001
  #   restart: always
  #   image: bitnami/minio:latest
    # ports:
    #   - "${GEMINI_STORAGE_PORT}:9000"
    #   - "${GEMINI_STORAGE_API_PORT}:9001"
    # environment:
    #   - "MINIO_ROOT_USER=${GEMINI_STORAGE_ROOT_USER}"
    #   - "MINIO_ROOT_PASSWORD=${GEMINI_STORAGE_ROOT_PASSWORD}"
    #   - "GEMINI_STORAGE_ACCESS_KEY=${GEMINI_STORAGE_ACCESS_KEY}"
    #   - "GEMINI_STORAGE_SECRET_KEY=${GEMINI_STORAGE_SECRET_KEY}"
    #   - "GEMINI_STORAGE_BUCKET_NAME=${GEMINI_STORAGE_BUCKET_NAME}"
    #   - "MC_HOST_local=http://${GEMINI_STORAGE_ROOT_USER}:${GEMINI_STORAGE_ROOT_PASSWORD}@localhost:9000"
    # volumes:
    #   - gemini_storage_data:/bitnami/minio/data
    #   - ./gemini/storage/scripts/init_minio.sh:/usr/local/bin/init_minio.sh
    # command: ["executable", "arg"]
    # command: >
    #   sh -c "minio server /data --console-address :9001 --address :9000 &
    #   until mc admin info local >/dev/null 2>&1; do
    #     echo 'Waiting for MinIO to be ready...';
    #     sleep 1;
    #   done && /usr/local/bin/init_minio.sh"
    # healthcheck:
    #   test: ["CMD", "/usr/local/bin/healthcheck.sh"]
    #   interval: 30s
    #   timeout: 5s
    #   start_period: 30s
    #   retries: 3         
    # healthcheck:
    #   test: ["CMD", "mc", "admin", "info", "local"]
    #   interval: 1s
    #   timeout: 3s
    #   retries: 3
    # networks:
    #   - gemini_network
    # depends_on:
    #   - db
  

  
networks:
  gemini_network:
    driver: bridge

volumes:
  gemini_db_data:
  gemini_logger_data:
  gemini_storage_data: